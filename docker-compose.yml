version: '3.8'
services:
  freqtrade:
    container_name: freqtrade
    image: freqtradeorg/freqtrade:stable
    restart: unless-stopped
    volumes:
      - "./:/freqtrade/user_data/"
      - "./config.json:/freqtrade/config.json"
      - "./freqai_config.json:/freqtrade/freqai_config.json"
      - "./strategies:/freqtrade/user_data/strategies"
      - "./models:/freqtrade/user_data/models"
      - "./databases:/freqtrade/user_data/databases"
    ports:
      - "8080:8080"
    command: >
      trade
      --strategy QuantumLoopStrategy
      --db-url sqlite:///databases/tradesv3.sqlite
      --logfile /freqtrade/user_data/logs/freqtrade.log
    environment:
      - FT_SERVER_PORT=8080
      - CUDA_VISIBLE_DEVICES=0  # For GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  freqai:
    build:
      context: .
      dockerfile: Dockerfile.freqai-custom
    container_name: freqai
    volumes:
      - "./models:/app/models"
      - "./data:/app/data"
      - "C:/AlgoTradPro5/models:/models"  # Map external models directory
    environment:
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  postgres:
    image: postgres:latest
    container_name: algotradepro5-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: algotradepro5-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@algotradepro5.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: algotradepro5-frontend
    ports:
      - "3000:3000"
    depends_on:
      - freqtrade
    restart: unless-stopped

volumes:
  pgdata:
