version: '3.8'

services:
  freqtrade:
    container_name: freqtrade
    image: freqtradeorg/freqtrade:stable
    restart: unless-stopped
    volumes:
      - "./:/freqtrade/user_data/"
      - "./config.json:/freqtrade/config.json"
      - "./freqai_config.json:/freqtrade/freqai_config.json"
      - "./strategies:/freqtrade/user_data/strategies"
      - "./models:/freqtrade/user_data/models"
      - "./databases:/freqtrade/user_data/databases"
    ports:
      - "8080:8080"
    command: >
      trade
      --strategy QuantumLoopStrategy
      --db-url sqlite:///databases/tradesv3.sqlite
      --logfile /freqtrade/user_data/logs/freqtrade.log
    environment:
      - FT_SERVER_PORT=8080
      - CUDA_VISIBLE_DEVICES=0  # For GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  freqai:
    image: algotradpro5-freqai:latest
    build:
      context: .
      dockerfile: Dockerfile.freqai-custom
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: freqai
    restart: unless-stopped
    volumes:
      - ./src:/app/src:ro  # Mount src as read-only
      - ./models:/app/models:ro  # Mount models as read-only
      - freqai_logs:/app/logs
      - freqai_cache:/root/.cache  # Mount cache directory for pip and models
      - ./docker/programdata/pip_cache:/root/.cache/pip  # Mount pip cache directory
    environment:
      - MODEL_DIR=/app/models
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/freqai.log
      - INITIAL_CAPITAL=10.0
      - MIN_MODEL_CONFIDENCE=0.85
      - MODEL_CACHE_SIZE=10
      - API_PORT=8001
      - CUDA_VISIBLE_DEVICES=0
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      - PYTHONPATH=/app/src  # Fixed PYTHONPATH to point to src directory
      - DOCKER_BUILDKIT=1
    ports:
      - "8001:8001"
      - "8002:8002"
    networks:
      - algo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  db:
    image: postgres:14-alpine
    container_name: algotradepro5-db
    environment:
      POSTGRES_USER: algotrade
      POSTGRES_PASSWORD: "${DB_PASSWORD:-trading_secure_password}"
      POSTGRES_DB: algotrade
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: algotradepro5-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL:-admin@algotradepro5.com}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD:-admin}"
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped

  frontend:
    image: algotradpro5-frontend:latest  # Add a tag for our image
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: algotradepro5-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_FREQAI_URL=http://freqai:8001
    depends_on:
      - freqai
    networks:
      - algo_network
    restart: unless-stopped

volumes:
  postgres_data:
  freqai_cache:
    name: freqai_cache
  freqai_logs:
    name: freqai_logs

networks:
  algo_network:
    driver: bridge
